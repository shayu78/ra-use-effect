{"version":3,"sources":["components/List/List.jsx","components/User/User.jsx","components/ListItem/ListItem.jsx","components/UsersList/UsersList.jsx","components/Details/Details.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["List","props","className","data","children","User","item","Fragment","name","ListItem","onClickItem","onClick","UsersList","useState","setData","loading","setLoading","error","setError","selectedItem","setSelectedItem","useEffect","a","fetch","process","response","ok","Error","statusText","json","message","setTimeout","fetchData","handleClick","event","length","map","cn","id","Details","info","src","avatar","alt","details","city","company","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f47e1836.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function List(props) {\r\n  const { className, data } = props;\r\n\r\n  return (\r\n    <ul className={className}>\r\n      {props.children(data)}\r\n    </ul>\r\n  );\r\n}\r\n\r\nList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function User(props) {\r\n  const { item } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <span className=\"user__content\">{item.name}</span>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nUser.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport User from '../User/User';\r\n\r\nexport default function ListItem(props) {\r\n  const { className, item, onClickItem } = props;\r\n\r\n  return (\r\n    <li className={className} onClick={() => onClickItem(item)} >\r\n      <User item={item} />\r\n    </li>\r\n  );\r\n}\r\n\r\nListItem.propTypes = {\r\n  className: PropTypes.string,\r\n  item: PropTypes.object.isRequired,\r\n  onClickItem: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '../List/List';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport cn from 'classnames';\r\n\r\nexport default function UsersList(props) {\r\n  const { onClickItem } = props;\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      setData(null);\r\n      try {\r\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL}users.json`);\r\n        if (!response.ok) throw new Error(response.statusText);\r\n        const data = await response.json();\r\n        setData(data);\r\n      } catch (e) {\r\n        setError(`Ошибка загрузки данных (${e.message})`);\r\n        setTimeout(() => setError(null), 3000);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleClick = (event) => {\r\n    setSelectedItem(event);\r\n    onClickItem(event);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <span className=\"loading\">Загрузка данных, подождите...</span>}\r\n      {error && <span className=\"error\">{error}</span>}\r\n      {data && data.length !== 0 && <List className='list__items' data={data}>\r\n        {data =>\r\n          data.map((item) =>\r\n            <ListItem key={item.id} className={cn({ 'list__item': true, 'active': item.id === selectedItem.id })}\r\n              item={item} onClickItem={handleClick} />)}\r\n      </List>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nUsersList.propTypes = {\r\n  onClickItem: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Details(props) {\r\n  const { info } = props;\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      setData(null);\r\n      try {\r\n        const response = await fetch(`${process.env.REACT_APP_SERVER_URL}${info.id}.json`);\r\n        if (!response.ok) throw new Error(response.statusText);\r\n        const data = await response.json();\r\n        setData(data);\r\n      } catch (e) {\r\n        setError(`Ошибка загрузки данных (${e.message})`);\r\n        setTimeout(() => setError(null), 3000);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [info.id]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <span className=\"loading\">Загрузка данных, подождите...</span>}\r\n      {error && <span className=\"error\">{error}</span>}\r\n      {data && <div className=\"user__details__wrapper\">\r\n        <img className=\"user__details__image\" src={data.avatar} alt={data.avatar} />\r\n        <span className=\"user__details__name\">{data.name}</span>\r\n        <span className=\"user__details__city\">City: {data.details.city}</span>\r\n        <span className=\"user__details__company\">Company: {data.details.company}</span>\r\n        <span className=\"user__details__position\">Position: {data.details.position}</span>\r\n      </div>}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nDetails.propTypes = {\r\n  info: PropTypes.object.isRequired,\r\n};\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport UsersList from './components/UsersList/UsersList';\nimport Details from './components/Details/Details';\n\nfunction App() {\n  const [data, setData] = useState({});\n\n  const handleClick = (event) => setData(event);\n\n  return (\n    <div className='component__wrapper'>\n      <UsersList onClickItem={handleClick} />\n      {data.id && <Details info={data} />}\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}